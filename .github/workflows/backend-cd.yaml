name: Backend Continuous Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch: # Manual trigger for the workflow

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          cd starter/backend
          npm ci

      - name: Run Lint
        run: |
          cd starter/backend
          npm run lint

  test:
    name: Testing
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          cd starter/backend
          npm ci

      - name: Run Tests
        run: |
          cd starter/backend
          npm test -- --ci --watchAll=false

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build Docker Image
        run: |
          docker build --tag mp-backend:latest .

      - name: Run Docker Container Locally
        run: |
          docker run -p 5000:5000 --name mp-backend -d mp-backend

      - name: Check Application Endpoint
        run: |
          curl http://localhost:5000/movies

      - name: Review Docker Logs
        run: |
          docker logs -f mp-backend

      - name: Tag Docker Image for ECR
        run: |
          docker tag mp-backend:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_NAME_BE:latest
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REPOSITORY_NAME_BE: ${{ secrets.ECR_REPOSITORY_NAME_BE }}

      - name: Push Docker Image to ECR
        run: |
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_NAME_BE:latest
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REPOSITORY_NAME_BE: ${{ secrets.ECR_REPOSITORY_NAME_BE }}

  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up kubectl
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Deploy to EKS using kubectl
        run: |
          kubectl set image deployment/backend-app backend-app=${{ secrets.ECR_REPO_URL }}:${{ github.sha }}
          kubectl rollout status deployment/backend-app
        env:
          ECR_REPO_URL: ${{ secrets.ECR_REPO_URL }}
