name: Frontend Continuous Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          cd starter/frontend
          npm ci

      - name: Run Lint
        run: |
          cd starter/frontend
          npm run lint

  test:
    name: Testing
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          cd starter/frontend
          npm ci

      - name: Run Tests
        run: |
          cd starter/frontend
          npm test -- --ci --watchAll=false

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build Docker Image
        run: |
          GIT_SHA=$(git rev-parse --short HEAD)
          docker build \
            --build-arg REACT_APP_MOVIE_API_URL=$REACT_APP_MOVIE_API_URL \
            --tag mp-frontend:$GIT_SHA \
            ./starter/frontend
        env:
          REACT_APP_MOVIE_API_URL: ${{ secrets.REACT_APP_MOVIE_API_URL }}

      - name: Push Docker Image to ECR
        run: |
          GIT_SHA=$(git rev-parse --short HEAD)
          docker tag mp-frontend:$GIT_SHA $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_NAME_FE:$GIT_SHA
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_NAME_FE:$GIT_SHA
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REPOSITORY_NAME_FE: ${{ secrets.ECR_REPOSITORY_NAME_FE }}
          REACT_APP_MOVIE_API_URL: ${{ secrets.REACT_APP_MOVIE_API_URL }}
          GIT_SHA: ${{ github.sha }}

  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up kubectl
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Install Kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin/
          kustomize version

      - name: Set Image Tag in Kustomize
        run: |
          GIT_SHA=$(git rev-parse --short HEAD)
          cd starter/frontend/k8s
          kustomize edit set image frontend=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_NAME_FE:$GIT_SHA
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REPOSITORY_NAME_FE: ${{ secrets.ECR_REPOSITORY_NAME_FE }}
          REACT_APP_MOVIE_API_URL: ${{ secrets.REACT_APP_MOVIE_API_URL }}
          GIT_SHA: ${{ github.sha }}

      - name: Deploy with Kustomize
        run: |
          cd starter/frontend/k8s
          kustomize build | kubectl apply -f -
